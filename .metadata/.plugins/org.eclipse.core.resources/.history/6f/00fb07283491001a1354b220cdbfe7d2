package com.hirexpert.qa.pages;

import org.junit.Assert;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.Select;

import com.hirexpert.qa.base.Testbase;

public class WorkbenchPage extends Testbase {

//	@FindBy(xpath="//a[contains(text(),'Workbench')]")
//	WebElement Workbenchbtn;
//	
//	@FindBy(id="jobDropdown")
//	WebElement JobDropDown;
//	
//	@FindBy(xpath="//button[contains(text(),'Add Candidate')]")
//	WebElement AddCandidateBtn;
	
//	@FindBy(xpath="//button[contains(text(),'Find')]")
//	WebElement FindBtn;
	
//	@FindBy(id="Name")
//	WebElement CandidateName;
//	
//	@FindBy(id="ContactNumber")
//	WebElement ContactNo;
//	
//	@FindBy(xpath="//input[@formcontrolname='Designation']")
//	WebElement JobDesignation;
//	
//	@FindBy(xpath="//*[@id=\"style-5\"]/div/div[1]/form/div[2]/div[1]/div/div/div[1]/div[6]/select")
//	WebElement CandidateGender ;
//	
//	@FindBy(id="NoticePeriod")
//	WebElement Noticeperiod ;
//	
//	@FindBy(xpath="//input[@formcontrolname='Location']")
//	WebElement JobLocation ;
//	
//	@FindBy(xpath="//ngb-modal-window//div[5]//select[1]")
//	WebElement CommunicationMode ;
	
//	@FindBy(xpath="/html/body/ngb-modal-window/div/div/job-applicant-component/div[3]/button[2]")
//	WebElement Savebtn ;
	
	@FindBy(name="Email")
	 WebElement CandidateEmailAddress ;
	
//	@FindBy(id="alertModalCloseBtn")
//	 WebElement CandidateOKBtn ;
	
//	@FindBy(id="EditCandidate")    // added in workbench page
//	 WebElement EditCandidateicon ;
	
//	@FindBy(xpath="//button[contains(text(),'Yes')]")
//	 WebElement  Yesbtn ;
	
//	@FindBy(xpath="//button[@title='Delete Candidate']")
//	WebElement  DeleteCandidateicon ;
	
//	@FindBy(xpath="//button[contains(text(),'Add Questionnaire')]")
//	 WebElement  AddQuestionnariebtn ;
	
//	@FindBy(xpath="//button[contains(text(),'Screening')]")
//	 WebElement  screeningbtn ;
	
//	@FindBy(xpath="//input[@placeholder='Add Question']")
//	 WebElement  AddQuestiontextbox ;
	
//	@FindBy(xpath="//input[@placeholder='Marks']")
//	 WebElement  TotalMarksofQuestion ;
	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[1]/td[2]/input[1]")
//	 WebElement Answer1 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[2]/td[2]/input[1]")
//	 WebElement Answer2 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[3]/td[2]/input[1]")
//	 WebElement Answer3 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[4]/td[2]/input[1]")
//	 WebElement Answer4 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[5]/td[2]/input[1]")
//	 WebElement Answer5 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[1]/td[3]/input[1]")
//	 WebElement Marks1 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[2]/td[3]/input[1]")
//	 WebElement Marks2 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[3]/td[3]/input[1]")
//	 WebElement Marks3 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[4]/td[3]/input[1]")
//	 WebElement Marks4 ;
//	
//	@FindBy(xpath="/html[1]/body[1]/ngb-modal-window[1]/div[1]/div[1]/app-add-edit-question[1]/div[2]/div[1]/div[4]/div[1]/form[1]/table[1]/tbody[1]/tr[5]/td[3]/input[1]")
//	 WebElement Marks5 ;
	
//	@FindBy(xpath="//button[contains(text(),'Save Changes')]")
//	 WebElement SaveChangesBtn ;
	
//	@FindBy(xpath="//*[@id=\"style-5\"]/div/div[3]/div/div/div[2]/input")
//	 WebElement CuttoffPercentage ;
//	
//	@FindBy(xpath="//*[@id=\"style-5\"]/div/div[3]/div/div/div[4]/input")
//	 WebElement RejectionPercentage ;
	
//	@FindBy(xpath="//button[contains(text(),'Submit')]")
//	 WebElement SubmitBtn ;
	
//	@FindBy(xpath="//*[@id=\"ng-invalidDiv\"]/tr/td[4]/button[1]")
//	 WebElement Editicon ;
	
//	@FindBy(xpath="//button[@title='Collect Answer']")
//	 WebElement CollectAnswericon ;
	
//	@FindBy(xpath="//*[@id=\"ng-invalidDiv\"]/tr/td[4]/button[2]/i")
//	 WebElement Deleteicon ;
	
//	@FindBy(xpath="//button[contains(text(),'Delete Questionnaire')]")
//	 WebElement DeleteQuestionnarie ;
	
	@FindBy(xpath="//button[@title=\"Schedule Interview\"]")
	 WebElement ScheduleInterviewicon ;
	
	@FindBy(xpath="//input[@formcontrolname='Title']")
	 WebElement ScheduleInterviewTitle ;
	
	@FindBy(xpath="//ng-multiselect-dropdown[@id='statusMultiselectDropdown']")
	 WebElement ScheduleInterviewInterviewer ;
	
	@FindBy(xpath="/html/body/ngb-modal-window/div/div/app-candidate-interview-info/div[2]/div/div[2]/form/div/div[2]/ng-multiselect-dropdown/div/div[2]/ul[2]/li/div")
	 WebElement SelectInterviewer ;
	
	@FindBy(xpath="//input[@placeholder='Select Date']")
	 WebElement ScheduleOn ;
	
	@FindBy(xpath="//input[@id='estimateTimeInHour']")
	 WebElement ScheduleInterviewHour;
	
	@FindBy(xpath="//input[@id='estimateTimeInMinute']")
	 WebElement ScheduleInterviewMinute;
	
	@FindBy(xpath="//*[@id=\"style-5\"]/div/div[2]/form/div/div[5]/div/div[1]/select")
	 WebElement InterviewDuration;
	
	@FindBy(xpath="//*[@id=\"style-5\"]/div/div[2]/form/div/div[6]/select")
	 WebElement Timezone;
	
	@FindBy(xpath="//a[@title='Candidate']")
	 WebElement CandidateUsername ;
	
	@FindBy(xpath="//a[@title='Employer']")
	 WebElement EmployerUsername ;
	
	@FindBy(xpath="//a[@title='Agency']")
	 WebElement AgencyUsername ;
	
	@FindBy(xpath="//img[contains(@class,'profile')]")
	 WebElement UserProfile;

	@FindBy(xpath="//a[contains(text(),'Update Profile')]")
	 WebElement UpdateProfileTab;

	@FindBy(xpath="//a[contains(text(),'Change Password')]")
	 WebElement ChangePasswordTab;
	
	@FindBy(xpath="//input[@placeholder='Current Password']")
	 WebElement CurrentPassword;
	
	@FindBy(xpath="//input[@placeholder='New Password']")
	 WebElement NewPassword;
	
	@FindBy(xpath="//input[@placeholder='Confirm Password']")
	 WebElement ConfirmPassword;
	
	@FindBy(xpath="//a[contains(text(),'Log Out')]")
	 WebElement Logout;
	
	
	//Initializing the Page objects
	
//		public WorkbenchPage() {     //constructor
//			PageFactory.initElements(driver, this);
//			
//			this.driver = driver;
//		}
		
		//Actions
		
		
		
//	       public void ClickWorkbenchbtn () {      //dashboard page
//	    	   Workbenchbtn.click();
//	       }
	  			
//	       public void ClickAddCandidatebtn() {      //workbench page
//		      	 
//		      	 AddCandidateBtn.click();
//		      	 
//		   }

//		public void selectjobT() {                //method added in workbench page
//			Select select = new Select (JobDropDown);
//	  		 select.selectByVisibleText("Job-1 Test Engineer - Active");
//		}

//		 public void Entercandidateemail(String CandidateEmail) {   //method added in add candidate page
//	      	 
//	      CandidateEmailAddress.sendKeys(CandidateEmail);
//	      	 
//	       }

//		 public void ClickFindbtn() {     //FindButton webelement added on add candidate page
//	      	 
//		      FindBtn.click();
//		      	 
//		       }
		 
//		 public void ClickCandidateOKbtn() {    //OKButtonSuccessPopup webelement added on add candidate page
//	      	 
//		      CandidateOKBtn.click();
//		      	 
//		       }
		 
//		 public void EnterAllMandatoryfields(String Name, String ContactNumber, String Designation, String Gender, String NoticePeriod, String Location, String Communicationmode) {
//	      	 
//		      CandidateName.sendKeys(Name);
//		      
//		      ContactNo.sendKeys(ContactNumber);
//		      
//		      JobDesignation.sendKeys(Designation);
//		      JobDesignation.sendKeys(Keys.ENTER);
//		      
//		      
//		      CandidateGender.sendKeys(Keys.ENTER);
//		      Select select1 = new Select (CandidateGender);
//		  	  select1.selectByVisibleText(Gender);
//		      
//		      Noticeperiod.sendKeys(NoticePeriod);
//		      
//		      JobLocation.sendKeys(Location);
//		      JobLocation.sendKeys(Keys.ENTER);
//		      
//		      CommunicationMode.sendKeys(Keys.ENTER);
//		      Select select11 = new Select (CommunicationMode);
//		  	  select11.selectByVisibleText(Communicationmode);
//		  	  
//		       }
//		 
//		 public void ClickSavebtn() {     //saveButton webelement added on add candidate page
//	      	 
//		      Savebtn.click();
//		      	 
//		       }
		 
//		 public void clickEditCandidateIcon() {   //candidateCardEditCandidateIcon webelement added on add workbench page
//			 
//			 EditCandidateicon.click();
//		 }
		 
//		 public void EnterContactNumber(String ContactNumber) {    //added in edit candidate page
//			 
//			 ContactNo.clear();
//			 
//			 ContactNo.sendKeys(ContactNumber);
//			 
//		 }
		 
// public void ClickYesbtn() {    //yesButtonProbabilityPopup webelement added on edit candidate page
//			 
//			 Yesbtn.click();
//			 
//		 }
		  
// public void ClickDeleteCandidateicon() {    //candidateCardDeleteCandidateIcon webelement added on workbench page
//	 
//	 DeleteCandidateicon.click();
//	 
// } 
		 
// public void EnterNoticePeriod(String NoticePeriod) {   //added in edit candidate page
//	 
//	 Noticeperiod.clear();
//	 
//	 Noticeperiod.sendKeys(NoticePeriod);
//	 
// }
		
//public void ClickAddQuestionnariebtn() {    //AddQuestionnariebtn webelement added on workbench page
//	 
//	AddQuestionnariebtn.click();
//	
//}

// public void AddQuestion(String Question) {  //added in add questionary page
//	 
//	 AddQuestiontextbox.sendKeys(Question);
// }
	
// public void AddTotalMarks(String Marks) {
//	 
//	 TotalMarksofQuestion.sendKeys(Marks);
// }
		 
// public void AddAnswers(String answer1, String answer2, String answer3, String answer4, String answer5) {   //added in add questionary page
//	 
//	 Answer1.sendKeys(answer1);
//	 
//	 Answer2.sendKeys(answer2);
//	 
//	 Answer3.sendKeys(answer3);
//	 
//	 Answer4.sendKeys(answer4);
//	 
//	 Answer5.sendKeys(answer5);
// }
//		 
//public void AddMarks(String marks1, String marks2, String marks3, String marks4, String marks5) {    //added in add questionary page
//	 
//	 Marks1.sendKeys(marks1);
//	 
//	 Marks2.sendKeys(marks2);
//	 
//	 Marks3.sendKeys(marks3);
//	 
//	 Marks4.sendKeys(marks4);
//	 
//	 Marks5.sendKeys(marks5);
// }

//public void AddQUESTION1(String QUESTION1) {
//	
//	 AddQuestiontextbox.sendKeys(QUESTION1);
//}
//	
//public void AddMARKS1(String QMARKS1) {
//	 
//	 TotalMarksofQuestion.sendKeys(QMARKS1);
//}
//		 
//public void AddANSWERS1(String ANSWER1, String ANSWER2) {
//	 
//	 Answer1.sendKeys(ANSWER1);
//	 
//	 Answer2.sendKeys(ANSWER2);
//}
//
//public void AddMARKS1(String MARKS1, String MARKS2) {
//	 
//	 Marks1.sendKeys(MARKS1);
//	 
//	 Marks2.sendKeys(MARKS2);
//	 
//}
//
//public void AddQUESTION2(String QUESTION2) { 
//	
//	 AddQuestiontextbox.sendKeys(QUESTION2);
//}
//	
//public void AddMARKS2(String QMARKS2) {
//	 
//	 TotalMarksofQuestion.sendKeys(QMARKS2);
//}
//		 
//public void AddANSWERS2(String ANSWER3, String ANSWER4) {
//	 
//	 Answer1.sendKeys(ANSWER3);
//	 
//	 Answer2.sendKeys(ANSWER4);
//}
//
//public void AddMARKS2(String MARKS3, String MARKS4) {
//	 
//	 Marks1.sendKeys(MARKS3);
//	 
//	 Marks2.sendKeys(MARKS4);
//	 
//}
//
//public void AddQUESTION3(String QUESTION3) { 
//	
//	 AddQuestiontextbox.sendKeys(QUESTION3);
//}
//	
//public void AddMARKS3(String QMARKS3) {
//	 
//	 TotalMarksofQuestion.sendKeys(QMARKS3);
//}
//		 
//public void AddANSWERS3(String ANSWER5, String ANSWER6) {
//	 
//	 Answer1.sendKeys(ANSWER5);
//	 
//	 Answer2.sendKeys(ANSWER6);
//}
//
//public void AddMARKS3(String MARKS5, String MARKS6) {
//	 
//	 Marks1.sendKeys(MARKS5);
//	 
//	 Marks2.sendKeys(MARKS6);
//	 
//}
//	

//public void ClickSaveChangesBtn() {
//	 
//	 SaveChangesBtn.click(); 
//}

//public void EntercuttoffPercentage(String cuttoffpercentage) {
//	
//	CuttoffPercentage.clear();
//	 
//	 CuttoffPercentage.sendKeys(cuttoffpercentage);
//}
//	
//public void EnterRejectionPercentage(String rejectionpercentage) {
//	
//	RejectionPercentage.clear();
//	 
//	 RejectionPercentage.sendKeys(rejectionpercentage);
//}

//public void ClickSubmitBtn() {
//	 
//	 SubmitBtn.click();
//}

//public void ClickEditicon() {
//	 
//	 Editicon.click();
//}

//public void EditQuestion(String question) {
//	
//	AddQuestiontextbox.clear();
//	
//	AddQuestiontextbox.sendKeys(question);
//	 
//}

//public void verifyCollectAnswericon () {
//	
//	if((CollectAnswericon).isDisplayed()){
//
//		System.out.println("Collect Answer icon is displayed on candidates card for giving answers");
//
//		}else{
//
//		System.out.println("Collect Answer icon is not displayed on candidates card for giving answers");
//
//		}
//}
	
	public void ClickDeleteicon () {
		
		Deleteicon.click();
		
	}
	
//	public void ClickDeleteQuestionnarie () {
//		
//		DeleteQuestionnarie.click();
//	}
	
//	public void ClickCollectAnswericon () {
//		
//		CollectAnswericon.click();
//	}
	
//	public void verifyQuestionnarieScreeningTab() {
//		
//		if((AddQuestionnariebtn)!= null){
//
//			System.out.println("Add Questionnarie button is not present on Agency Login");
//
//			}else{
//
//			System.out.println("Add Questionnarie button is present on Agency Login");
//
//			}
//		
//		if((screeningbtn)!= null){
//
//			System.out.println("Screening button is not present on Agency Login");
//
//			}else{
//
//			System.out.println("Screening button is present on Agency Login");
//
//			}
//	
//	}
	
	
	public void clickScheduleInterviewicon () {
		
		ScheduleInterviewicon.click();
		
	}
	
	public void Selectinterviewer (String interviewer) {
		
		ScheduleInterviewInterviewer.click();
		
		SelectInterviewer.click();
		 
		ScheduleInterviewInterviewer.click();
	}
	
    public void EnterInterviewTitle (String title) {
		
		 ScheduleInterviewTitle.sendKeys(title);
		
	}

    public void ScheduleInterviewOn (String scheduleon) {
		
		 ScheduleOn.sendKeys(scheduleon);
		 
		 ScheduleOn.click();
		
	}

    public void EnterInterviewTime (String hour, String minute) {
    	
    	ScheduleInterviewHour.clear();
		
		 ScheduleInterviewHour.sendKeys(hour);
		 
		 ScheduleInterviewMinute.clear();
		 
		 ScheduleInterviewMinute.sendKeys(minute);
		
	}
	
    public void EnterInterviewDuration (String interviewduration) {
		
    	 Select select = new Select (InterviewDuration);
		 select.selectByVisibleText(interviewduration);
		
	}
    
    public void EnterTimezone (String timezone) {
		
   	 Select select = new Select (Timezone);
		 select.selectByVisibleText(timezone);
		
	}
	
	
//   public void VerifytheCandidateUsername () {
//	   
//	   Actions action = new Actions(driver);
//	   action.moveToElement(UserProfile).perform();
//	  
//	   Assert.assertEquals(CandidateUsername.getText(),CandidateName);
//	   
//  }
//	
// public void VerifytheEmployerUsername() {
//   
//	   Actions action = new Actions(driver);
//	   action.moveToElement(UserProfile).perform();
//	  
//	   Assert.assertEquals(EmployerUsername.getText(),EmployerName);
//	   
//   }
// 
// public void VerifytheAgencyUsername () {
//	   
//	   Actions action = new Actions(driver);
//	   action.moveToElement(UserProfile).perform();
//	  
//	   Assert.assertEquals(AgencyUsername.getText(),AgencyName);
//	   
// }
	
    public void ClickUpdateProfileTab () {
   
    	Actions action = new Actions(driver);
    	action.moveToElement(UserProfile).perform();
        UpdateProfileTab.click();
   
  }
	
    public void ClickChangePasswordTab () {
    	   
    	Actions action = new Actions(driver);
    	action.moveToElement(UserProfile).perform();
        ChangePasswordTab.click();
    
}
    
    public void EnterCurrentPassword (String password) {
 	   
    	CurrentPassword.clear();
    	CurrentPassword.sendKeys(password);
    
}
    
   public void EnterNewPassword (String newpassword) {
	   
	   NewPassword.clear();
	  NewPassword.sendKeys(newpassword);
   }
   
public void EnterConfirmPassword (String confirmpassword) {
	   
	ConfirmPassword.clear();
	ConfirmPassword.sendKeys(confirmpassword);
	
   }

public void ClickonLogout() {
	   
	Actions action = new Actions(driver);
	action.moveToElement(UserProfile).perform();
	Logout.click();
   }
}












   
    
