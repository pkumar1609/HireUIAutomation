package VerifyTabsDropdownAgencyLoginStepDefinationPackageT;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.When;
import utilPackage.baseclass;

public class VerifyTabsDropdownAgencyLoginStepDefination extends baseclass {
	
	@Given("^Open browser$")
	public void open_browser()  {
		
		baseclass.initialization(); 
	}

	@When("^login with Agency credential Who already have a Job added$")
	public void login_with_Agency_credential_Who_already_have_a_Job_added() throws InterruptedException {
		
		Thread.sleep(3000);
		registerpage.agencylogin();
	}

	@When("^Click on Workbench tab and select job from job drop down in which candidate is added$")
	public void click_on_Workbench_tab_and_select_job_from_job_drop_down_in_which_candidate_is_added() throws InterruptedException  {
	    
		Thread.sleep(3000);
		
		wp.ClickWorkbenchbtn();
		
		wp.selectjob();
		
	}

	@When("^Verify that Questionnarie and Screening tab is not displayed when login with Agency$")
	public void verify_that_Questionnarie_and_Screening_tab_is_not_displayed_when_login_with_Agency() throws Throwable {
		
		Thread.sleep(3000);
	    
		wp.verifyQuestionnarieScreeningTab();
		
	}

	@When("^Click on Schedule interview icon$")
	public void click_on_Schedule_interview_icon() throws Throwable {
		
		Thread.sleep(3000);
		
		wp.clickScheduleInterviewicon();
	    
	}

	@When("^Click interviewer from Interviewer drop down \"([^\"]*)\"$")
	public void Click_interviewer_from_Interviewer_drop_down(String interviewer) throws Throwable {
	    
		Thread.sleep(3000);
		
		wp.Selectinterviewer(interviewer);
	}

	@When("^Fill all mandatory details \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\" \"([^\"]*)\"$")
	public void fill_all_mandatory_details(String title, String scheduleon, String hour, String minute, String interviewduration, String timezone) throws Throwable {
		
		Thread.sleep(3000);
		
		wp.EnterInterviewTitle(title);
		
		wp.ScheduleInterviewOn(scheduleon);
		
		wp.EnterInterviewTime(hour, minute);
		
		wp.EnterInterviewDuration(interviewduration);
		
		wp.EnterTimezone(timezone);
	    
	}

	@When("^Click on submit\\.$")
	public void click_on_submit() throws Throwable {
		
		Thread.sleep(3000);
		
		wp.ClickSubmitBtn();
	   
		
	}


	

}
