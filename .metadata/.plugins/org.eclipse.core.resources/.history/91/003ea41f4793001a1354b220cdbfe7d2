package com.Hirexpert.pages;

import java.io.IOException;
import java.util.List;
import java.util.Map;

import org.openqa.selenium.By;
import org.openqa.selenium.NoSuchElementException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;

import com.Hirexpert.utils.TestBase;

import cucumber.api.DataTable;

public class TeamPage extends TestBase{

		public TeamPage() throws IOException {
		super();
		PageFactory.initElements(driver, this);
		this.driver=driver;
	}
		
		public String namevalidate;
		public String teamMemberName;

//		@FindBy(xpath ="(//a[@class='nav-link'])[5]")
//		private WebElement teamtab; 
//		
//		@FindBy(xpath ="//button[@title='Team Members']")
//		private WebElement addbtn ; 
		
//		@FindBy(xpath="//button[@type='button'][text()='Close']")     //AddClosebtn webelement on team page
//		public WebElement Closebtn;
		
//		@FindBy(xpath="//button[@class='btn btn-outline-dark']")      //closeButton webelement on team page
//		public WebElement teamclosebtn;
		
//		@FindBy(xpath="//button[@title='Delete']")
//		public WebElement deletebtn;
		
//		@FindBy(xpath="//button[@id='confirmModalBtn']")               //confimYesDelete webelement on team page
//		static WebElement confimYes;
		
		
//		String teammemberpresent= "//td[text()='" +teamMemberName+ "']";
		
//		@FindBy(xpath="//td[text()='pe2']")
//		public WebElement teammemberpresent;
		
//		@FindBy(xpath="//input[@formcontrolname='Name']")          //added on team page
//		public WebElement namefield ;
//		
//		@FindBy(xpath="//input[@formcontrolname='Email']")
//		public WebElement emailfield;
//		
//		@FindBy(xpath="//input[@formcontrolname='ContactNumber']")
//		public WebElement contactnumber ;
		
//		@FindBy(xpath="//select[@formcontrolname='CountryId']")
//		public WebElement countryid;
		
//		@FindBy(xpath="//button[@type='submit']")                //submitButton webelement on team page
//		public WebElement submitbtn;
		
		
//		public void clickOnTeamtab()      //added on dashboard page
//		{
//			executor.executeScript("arguments[0].click();",teamtab);
//		}

//		public void clickOnAddBtn()                        //added on team page
//		{
//			explicitwait.until(ExpectedConditions.elementToBeClickable(addbtn));
//			executor.executeScript("arguments[0].click();",addbtn);
//			
//		}
		public void AddAllDetails(DataTable credentials) throws InterruptedException
		{
			
			for (Map<String, String> data : credentials.asMaps(String.class, String.class))
			{
				teampage.clickOnAddBtn();
				explicitwait.until(ExpectedConditions.elementToBeClickable(namefield));
				namefield.sendKeys(data.get("Name"));
				namevalidate = data.get("Name");
				emailfield.sendKeys(data.get("Email"));
				contactnumber.sendKeys(data.get("contact"));
				Select dropdown = new Select(countryid);
				dropdown.selectByVisibleText("India");
				teampage.ClickSumbit();
				
			}
		    }
		
		public void AddAllDetailsagy(DataTable credentials) throws InterruptedException
		{
			
			for (Map<String, String> data : credentials.asMaps(String.class, String.class))
			{
				namefield.sendKeys(data.get("Nameagy"));
				namevalidate= data.get("Nameagy");
				emailfield.sendKeys(data.get("Emailagy"));
				contactnumber.sendKeys(data.get("contactagy"));
				Select dropdown = new Select(countryid);
				dropdown.selectByVisibleText("India");
				Thread.sleep(1000);
				teampage.ClickSumbit();
				Thread.sleep(1000);
				teampage.clickOnAddBtn();
			}
				Thread.sleep(1000);
				teampage.Closebtn.click();
				
		}
		
	
		public void ClickSumbit() throws InterruptedException
		{
			Thread.sleep(2000);
			submitbtn.click();
			
		}

		public void deleteteam()
		{
			
			
			List<WebElement> ele= driver.findElements(By.xpath("//button[@title='Delete']"));
	 if(ele.get(0).isEnabled())
	 {
		 ele.get(0).click();
		 confimYes.click();
	 }
	 else
	 {	
		ele.get(1).click();
	 confimYes.click();
			}
	 
			
		}
public void closeTeamPage()
{
	executor.executeScript("arguments[0].click();",teamclosebtn);
}

//is team member present?
public void isTeamPresentForEmp(DataTable credentials) throws InterruptedException
{
	clickOnTeamtab();
	for (Map<String, String> data : credentials.asMaps(String.class, String.class))
	{
		
		teamMemberName=prop.getProperty("team");
		try
		{
			driver.findElement(By.xpath(teammemberpresent)).isDisplayed();
			teampage.closeTeamPage();
		}
		catch(NoSuchElementException e)
		{
			AddAllDetails(credentials);
			teampage.closeTeamPage();
		}	
	}
	}


public void isTeamPresentForAgy(DataTable credentials) throws InterruptedException
{
	clickOnTeamtab();
	for (Map<String, String> data : credentials.asMaps(String.class, String.class))
	{
		teamMemberName=prop.getProperty("agyteam");
		try
		{
			driver.findElement(By.xpath(teammemberpresent)).isDisplayed();
			teampage.closeTeamPage();
		}
		catch(NoSuchElementException e)
		{
			AddAllDetailsagy(credentials);
			teampage.closeTeamPage();
		}	
	}
	}
}

